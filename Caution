주의 사항.


DFS.
- Visit 배열 작성 주의.  ( 보통 1번 Test Case 를 돌렸는데 Stack OverFlow 다 하면 100퍼임 주의)

- dx[], dy[] 상황에 따라 판단하고 쓸것.

- ArrayList remove -> 뒤쪽 배열들은 당겨지나, 앞쪽 배열들은 안 당겨짐에 유의하고 사용.
  - for문에서 뒤쪽 배열 고려시 i-- 하면되나, 앞쪽 index를 다시 써야할 때 조심 하는 것에 유의.

- Clear, 초기화, 범위 등 런타임 에러 주의
  
  기본 구조 :
  
  dfs(){
  
  //count++, visit = true
  
    for(int i=0; i<4; i++){
    // tx, ty 설정
    
    // 범위 등 예외 처리 -> continue
    
    // else { 본격 처리 dfs()}
  
    }
  
  //visit = false; 
  
  }
  


BFS. -> visit을 다시 false 시킬일 없이 둥근 모양으로 쭉 가서 끝낼 수 있을 떄 . 

bfs(){
  //q 초기값 설정.

  while(!q.isEmpty()){
  
    q.pop();
    visit = true;
    
    for(int i=0; i<4; i++){
    // tx, ty 설정
    
    //범위 처리
    
    //else { 본격 처리 q.insert}
    
    
    }
  
  }

}
